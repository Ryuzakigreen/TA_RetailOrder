// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TARetailOrder.ApiService.DataContext;

#nullable disable

namespace TARetailOrder.ApiService.DataContext.Migrations
{
    [DbContext(typeof(DBDataContext))]
    [Migration("20250630041340_Added-Seed-Category")]
    partial class AddedSeedCategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TARetailOrder.ApiService.DataContext.Models.Category", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("integer");

                    b.Property<int>("DeleterUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = new Guid("0e798d71-0ea8-4166-8051-aa77545c1842"),
                            CreationTime = new DateTime(2025, 4, 1, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(8194),
                            CreatorUserId = 0,
                            DeleterUserId = 0,
                            Description = "Electronic devices and accessories for modern living",
                            IsDeleted = false,
                            Name = "Electronics",
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("2300c16c-ac05-48d1-8053-d39d3d704f61"),
                            CreationTime = new DateTime(2025, 4, 6, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(8194),
                            CreatorUserId = 0,
                            DeleterUserId = 0,
                            Description = "Fashion and apparel for all occasions",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2025, 6, 10, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(8194),
                            LastModifierUserId = 1,
                            Name = "Clothing",
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("825b818a-d436-4bac-8e1b-9472409335e1"),
                            CreationTime = new DateTime(2025, 4, 11, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(8194),
                            CreatorUserId = 0,
                            DeleterUserId = 0,
                            Description = "Essential items for your home and kitchen needs",
                            IsDeleted = false,
                            Name = "Home & Kitchen",
                            Status = 0
                        },
                        new
                        {
                            ID = new Guid("efdab8b9-fd6b-4311-9a45-f014682f47ed"),
                            CreationTime = new DateTime(2025, 4, 16, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(8194),
                            CreatorUserId = 0,
                            DeleterUserId = 0,
                            Description = "Educational and entertainment reading materials",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2025, 6, 15, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(8194),
                            LastModifierUserId = 1,
                            Name = "Books",
                            Status = 1
                        },
                        new
                        {
                            ID = new Guid("fec1de25-5bc4-4351-a9ac-6a46addd55f7"),
                            CreationTime = new DateTime(2025, 4, 21, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(8194),
                            CreatorUserId = 0,
                            DeleterUserId = 0,
                            Description = "Equipment and gear for outdoor activities and sports",
                            IsDeleted = false,
                            Name = "Sports & Outdoors",
                            Status = 0
                        });
                });

            modelBuilder.Entity("TARetailOrder.ApiService.DataContext.Models.Customer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("integer");

                    b.Property<int>("DeleterUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("ID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = new Guid("69364887-510a-4825-9551-067455ef590d"),
                            BillingAddress = "123 Main Street, Quezon City, Metro Manila, Philippines",
                            CreationTime = new DateTime(2025, 5, 31, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(7889),
                            CreatorUserId = 1,
                            DeleterUserId = 0,
                            Email = "john.smith@email.com",
                            FirstName = "John",
                            IsDeleted = false,
                            LastName = "Smith",
                            PhoneNo = "09123456789",
                            ShippingAddress = "123 Main Street, Quezon City, Metro Manila, Philippines"
                        },
                        new
                        {
                            ID = new Guid("7770c1cc-8831-416c-a328-e9c3d2de680f"),
                            BillingAddress = "456 Rizal Avenue, Makati City, Metro Manila, Philippines",
                            CreationTime = new DateTime(2025, 6, 5, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(7889),
                            CreatorUserId = 1,
                            DeleterUserId = 0,
                            Email = "maria.santos@gmail.com",
                            FirstName = "Maria",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2025, 6, 20, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(7889),
                            LastModifierUserId = 2,
                            LastName = "Santos",
                            PhoneNo = "09187654321",
                            ShippingAddress = "456 Rizal Avenue, Makati City, Metro Manila, Philippines"
                        },
                        new
                        {
                            ID = new Guid("d84697a9-0fb1-482a-aeb8-143c35ad06a9"),
                            BillingAddress = "321 Ortigas Center, Pasig City, Metro Manila, Philippines",
                            CreationTime = new DateTime(2025, 6, 10, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(7889),
                            CreatorUserId = 2,
                            DeleterUserId = 0,
                            Email = "carlos.reyes@yahoo.com",
                            FirstName = "Carlos",
                            IsDeleted = false,
                            LastName = "Reyes",
                            PhoneNo = "09234567890",
                            ShippingAddress = "789 Commonwealth Ave, Quezon City, Metro Manila, Philippines"
                        },
                        new
                        {
                            ID = new Guid("2468d239-aae6-4bc2-9e3e-e249b4b47f01"),
                            BillingAddress = "147 Taft Avenue, Manila, Metro Manila, Philippines",
                            CreationTime = new DateTime(2025, 6, 15, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(7889),
                            CreatorUserId = 1,
                            DeleterUserId = 0,
                            Email = "ana.cruz@hotmail.com",
                            FirstName = "Ana",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2025, 6, 25, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(7889),
                            LastModifierUserId = 1,
                            LastName = "Cruz",
                            PhoneNo = "09198765432",
                            ShippingAddress = "147 Taft Avenue, Manila, Metro Manila, Philippines"
                        },
                        new
                        {
                            ID = new Guid("d49b0c94-9644-4ede-811a-db870f336dd3"),
                            BillingAddress = "258 EDSA, Mandaluyong City, Metro Manila, Philippines",
                            CreationTime = new DateTime(2025, 6, 18, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(7889),
                            CreatorUserId = 2,
                            DeleterUserId = 0,
                            Email = "roberto.garcia@outlook.com",
                            FirstName = "Roberto",
                            IsDeleted = false,
                            LastName = "Garcia",
                            PhoneNo = "09345678901",
                            ShippingAddress = "258 EDSA, Mandaluyong City, Metro Manila, Philippines"
                        },
                        new
                        {
                            ID = new Guid("137cdf92-b8a1-4bc8-906b-e7d80741988b"),
                            BillingAddress = "159 BGC, Taguig City, Metro Manila, Philippines",
                            CreationTime = new DateTime(2025, 6, 22, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(7889),
                            CreatorUserId = 1,
                            DeleterUserId = 0,
                            Email = "elena.mendoza@gmail.com",
                            FirstName = "Elena",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2025, 6, 28, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(7889),
                            LastModifierUserId = 2,
                            LastName = "Mendoza",
                            PhoneNo = "09456789012",
                            ShippingAddress = "369 Katipunan Avenue, Quezon City, Metro Manila, Philippines"
                        },
                        new
                        {
                            ID = new Guid("4f9e17f1-c834-4d08-88a0-a74bd98bd3ad"),
                            BillingAddress = "741 Shaw Boulevard, Mandaluyong City, Metro Manila, Philippines",
                            CreationTime = new DateTime(2025, 6, 24, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(7889),
                            CreatorUserId = 2,
                            DeleterUserId = 0,
                            Email = "miguel.torres@email.com",
                            FirstName = "Miguel",
                            IsDeleted = false,
                            LastName = "Torres",
                            PhoneNo = "09567890123",
                            ShippingAddress = "741 Shaw Boulevard, Mandaluyong City, Metro Manila, Philippines"
                        },
                        new
                        {
                            ID = new Guid("d6bbd2b2-ef9d-44f8-b669-46cba4129b44"),
                            BillingAddress = "852 Alabang-Zapote Road, Las Piñas City, Metro Manila, Philippines",
                            CreationTime = new DateTime(2025, 6, 26, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(7889),
                            CreatorUserId = 1,
                            DeleterUserId = 0,
                            Email = "isabella.flores@yahoo.com",
                            FirstName = "Isabella",
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2025, 6, 29, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(7889),
                            LastModifierUserId = 1,
                            LastName = "Flores",
                            PhoneNo = "09678901234",
                            ShippingAddress = "852 Alabang-Zapote Road, Las Piñas City, Metro Manila, Philippines"
                        },
                        new
                        {
                            ID = new Guid("134c646b-13cc-4a9e-b976-2aaf8b515f7b"),
                            BillingAddress = "963 C5 Road, Pasig City, Metro Manila, Philippines",
                            CreationTime = new DateTime(2025, 6, 28, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(7889),
                            CreatorUserId = 2,
                            DeleterUserId = 0,
                            FirstName = "Diego",
                            IsDeleted = false,
                            LastName = "Villanueva",
                            PhoneNo = "09789012345",
                            ShippingAddress = "963 C5 Road, Pasig City, Metro Manila, Philippines"
                        });
                });

            modelBuilder.Entity("TARetailOrder.ApiService.DataContext.Models.Product", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("integer");

                    b.Property<int>("DeleterUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Qty")
                        .HasColumnType("integer");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TARetailOrder.ApiService.DataContext.Models.User", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatorUserId")
                        .HasColumnType("integer");

                    b.Property<int>("DeleterUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LastModifierUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = new Guid("549ce963-dc20-4354-a85c-d9a805937643"),
                            CreationTime = new DateTime(2025, 5, 1, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(8121),
                            CreatorUserId = 0,
                            DeleterUserId = 0,
                            IsDeleted = false,
                            Password = "AM4OLBpptxBYmM79lGOX9egzZk3vIQU3d/gFCJzaBjAPXzYIK3tQ2N7X4fcrHtElTw==",
                            Role = 1,
                            Username = "admin"
                        },
                        new
                        {
                            ID = new Guid("6f9521b1-5bc6-4790-a7f6-6c9940fc8083"),
                            CreationTime = new DateTime(2025, 5, 16, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(8121),
                            CreatorUserId = 0,
                            DeleterUserId = 0,
                            IsDeleted = false,
                            LastModificationTime = new DateTime(2025, 6, 20, 4, 13, 39, 91, DateTimeKind.Utc).AddTicks(8121),
                            LastModifierUserId = 1,
                            Password = "AM4OLBpptxBYmM79lGOX9egzZk3vIQU3d/gFCJzaBjAPXzYIK3tQ2N7X4fcrHtElTw==",
                            Role = 0,
                            Username = "user"
                        });
                });

            modelBuilder.Entity("TARetailOrder.ApiService.DataContext.Models.Product", b =>
                {
                    b.HasOne("TARetailOrder.ApiService.DataContext.Models.Category", "CategoryFk")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("CategoryFk");
                });
#pragma warning restore 612, 618
        }
    }
}
